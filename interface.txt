===========================================================

signIn (로그인)

- url
POST /api/v1/auth/sign-in

- request
{
    *email : String,
    *password : String
}

- response

성공
Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    token : "jwt...",
    expiredDate : 123456789
}

실패

- 필수 정보 미입력 

- 로그인 실패
Http Status - 401 (Unauthorized)
{
    code : "SF",
    message : "Sign In Failed."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

signUp (회원가입)

-url
POST /api/v1/auth/sign-up

- request
{
    *email : String,
    *password : String,
    *nickname : String,
    *telNumber : String,
    *address : String,
    addressDetail : String
}

- response

성공
Http Status - 200 (OK)
{
    code : "SU",
    message : "Success."
}

실패

- 필수 정보 미입력 / 이메일 포맷 불일치 / 비밀번호 8자리 미만 / 전화번호 포맷 불일치

- 이메일 중복
Http Status - 400 (Bad Request)
{
    code : "EE",
    message : "Existed Email."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

weeklyTop3List (주간 탑3 게시물 리스트)

-url
GET /api/v1/board/top-3

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    top3List : BoardListItem[]
}

BoardListItem
{
    boardNumber: int,
    title: String,
    content: String,
    boardTitleImage: String,
    favoriteCount: int,
    commentCount: int,
    viewCount: int,
    writeDateTime: String,
    writerNickname: String,
    writerProfileImage: String,
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

currentList (최신 게시물 리스트)

-url
GET /api/v1/board/current-list/{pageNumber}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    currentList : BoardListItem[]
}

BoardListItem
{
    boardNumber: int,
    title: String,
    content: String,
    boardTitleImage: String,
    favoriteCount: int,
    commentCount: int,
    viewCount: int,
    writeDateTime: String,
    writerNickname: String,
    writerProfileImage: String,
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

popularSearchList (인기 검색어 리스트)

- url
GET /api/v1/search/popular-list

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    popularSearchList : String[]
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

searchList (검색 게시물 리스트)

-url
GET /api/v1/board/search-list/{searchWord}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    searchList : BoardListItem[]
}

BoardListItem
{
    boardNumber: int,
    title: String,
    content: String,
    boardTitleImage: String,
    favoriteCount: int,
    commentCount: int,
    viewCount: int,
    writeDateTime: String,
    writerNickname: String,
    writerProfileImage: String,
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

relativeSearchList (연관 검색어 리스트)

- url
GET /api/v1/search/{searchWord}/relation-list

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    relativeSearchList : String[]
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

boardDetail (게시물 상세)

-url
GET /api/v1/board/{boardNumber}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    boardNumber: int,
    title: String,
    content: String,
    boardImageList: String[],
    writeDateTime: String,
    writerEmail: String,
    writerNickname: String,
    writerProfileImage: String,
}

실패

- 존재하지 않는 게시물
Http Status - 400 (Bad Request)
{
    code : "NB"
    message : "No Existed Board Number."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

favoriteList (좋아요 리스트)

-url
GET /api/v1/board/{boardNumber}/favorite-list

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    favoriteList : favoriteListItem[]
}

favoriteListItem{
    email: string,
    nickname: string,
    profileImage: string
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

putFavorite (좋아요 기능)

- url
PUT /api/v1/board/{boardNumber}/favorite

- Header
Name                Value
Authorization       Bearer Token

- request
{
    *boardNumber: int
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success."
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

commentList (댓글 리스트)

-url
GET /api/v1/board/{boardNumber}/comment-list

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    commentList : CommentListItem[]
}

CommentListItem {
    email : string,
    nickname : string,
    writeDateTime : string,
    content : string
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

postComment (댓글 쓰기)

- request
{
    *content : string
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
}

실패

- 존재하지 않는 게시물
Http Status - 400 (Bad Request)
{
    code : "NB"
    message : "No Existed Board."
}

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU"
    message : "No Existed User."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

boardWrite (게시물 쓰기)

-url
POST /api/v1/board/

- Header
Name                Value
Authorization       Bearer Token

- request
{
    *title : string,
    *content : string
    boardImageList : string[]
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
}

실패

- 존재하지 않는 게시물
Http Status - 400 (Bad Request)
{
    code : "NB"
    message : "No Existed Board."
}

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU"
    message : "No Existed User."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

boardDelete (게시물 삭제)

- url
DELETE /api/v1/board/{boardNumber}

- Header
Name                Value
Authorization       Bearer Token

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
}

실패

- 존재하지 않는 게시물
Http Status - 400 (Bad Request)
{
    code : "NB"
    message : "No Existed Board."
}

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU"
    message : "No Existed User."
}

- 권한 없음
Http Status - 403 (Forbidden)
{
    code : "NP"
    message : "No Permission."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

boardUpdate (게시물 수정)

- url
PATCH /api/v1/board/{boardNumber}

- Header
Name                Value
Authorization       Bearer Token

- request
{
    *title : string,
    *content : string
    boardImageList : string[]
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
}

실패

- 존재하지 않는 게시물
Http Status - 400 (Bad Request)
{
    code : "NB"
    message : "No Existed Board."
}

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU"
    message : "No Existed User."
}

- 권한 없음
Http Status - 403 (Forbidden)
{
    code : "NP"
    message : "No Permission."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

getUser (유저 정보)

- url
GET /api/v1/user/{email}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success."
    email : string,
    nickname: string
    profileImage: string
}

실패

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU"
    message : "No Existed User."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

userBoardList (특정 유저 게시물 리스트)

-url
GET /api/v1/board/user-board-list/{email}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    boardList : BoardListItem[]
}

BoardListItem
{
    boardNumber: int,
    title: String,
    content: String,
    boardTitleImage: String,
    favoriteCount: int,
    commentCount: int,
    viewCount: int,
    writeDateTime: String,
    writerNickname: String,
    writerProfileImage: String,
}

실패

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

patchNickname (닉네임 수정)

- url
PATCH /api/v1/user/nickname

- Header
Name                Value
Authorization       Bearer Token

- request 
{
    *nickname: string
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    boardList : BoardListItem[]
}

실패

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU"
    message : "No Existed User."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

patchProfileImage (프로필 이미지 수정)

- url
PATCH /api/v1/user/profile-image

- Header
Name                Value
Authorization       Bearer Token

- request 
{
    *profileImage: string
}

- response

성공

Http Status - 200 (OK)
{
    code : "SU",
    message : "Success.",
    boardList : BoardListItem[]
}

실패

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
    code : "NU"
    message : "No Existed User."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
    code : "DE"
    message : "Database Error."
}

===========================================================

fileUpload (파일 업로드)

===========================================================

getFile (파일 불러오기)

===========================================================